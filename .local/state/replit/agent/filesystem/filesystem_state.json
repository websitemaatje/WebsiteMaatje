{"file_contents":{"main.py":{"content":"from flask import Flask, render_template_string, send_from_directory\nimport os\n\napp = Flask(__name__)\n\n# Read the HTML file content\ndef get_html_content():\n    with open('index.html', 'r', encoding='utf-8') as f:\n        return f.read()\n\n@app.route('/')\ndef index():\n    return get_html_content()\n\n@app.route('/style.css')\ndef style():\n    return send_from_directory('.', 'style.css', mimetype='text/css')\n\n@app.route('/script.js')\ndef script():\n    return send_from_directory('.', 'script.js', mimetype='application/javascript')\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=True)","size_bytes":608},"pyproject.toml":{"content":"[project]\nname = \"repl-nix-workspace\"\nversion = \"0.1.0\"\ndescription = \"Add your description here\"\nrequires-python = \">=3.11\"\ndependencies = [\n    \"email-validator>=2.3.0\",\n    \"flask>=3.1.2\",\n    \"flask-sqlalchemy>=3.1.1\",\n    \"gunicorn>=23.0.0\",\n    \"psycopg2-binary>=2.9.10\",\n]\n","size_bytes":280},"replit.md":{"content":"# Overview\n\nTechFlow Solutions is a web development and cloud services company website built as a single-page application. The site showcases the company's services with a modern, responsive design using Bootstrap's dark theme. The application features smooth scrolling navigation, animated sections, and a professional presentation of web development and cloud hosting services.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Single-Page Application (SPA)** - Built with vanilla HTML, CSS, and JavaScript for simplicity and performance\n- **Bootstrap Framework** - Uses Bootstrap with Replit's dark theme for consistent UI components and responsive design\n- **Component-Based CSS** - Custom CSS variables and modular styling approach with CSS custom properties for theming\n- **Progressive Enhancement** - Core functionality works without JavaScript, enhanced features added through JS\n\n## Design Patterns\n- **Module Pattern** - JavaScript functionality organized into discrete initialization functions\n- **Event-Driven Architecture** - DOM event listeners handle user interactions and scroll-based animations\n- **Mobile-First Responsive Design** - Bootstrap grid system ensures compatibility across all device sizes\n- **Smooth Scrolling Navigation** - Single-page navigation with section-based routing using hash links\n\n## Performance Optimizations\n- **Lazy Loading** - Scroll-based animations and effects only activate when needed\n- **Efficient DOM Manipulation** - Minimal DOM queries with cached selectors\n- **CSS Transitions** - Hardware-accelerated animations using CSS transforms and opacity\n- **Backdrop Filters** - Modern CSS effects for glassmorphism navigation styling\n\n# External Dependencies\n\n## CSS Frameworks\n- **Bootstrap 5** - Replit Agent Dark Theme variant for UI components and grid system\n- **Font Awesome 6.4.0** - Icon library for visual elements and branding\n\n## CDN Services\n- **Replit CDN** - Bootstrap theme hosting\n- **Cloudflare** - Font Awesome icon delivery\n\n## Browser APIs\n- **Intersection Observer** - For scroll-based animations and section detection\n- **Scroll Events** - Navigation highlighting and parallax effects\n- **CSS Custom Properties** - Dynamic theming and style management","size_bytes":2303},"script.js":{"content":"// TechFlow Solutions - Main JavaScript File\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize all functionality when DOM is loaded\n    initializeNavigation();\n    initializeSmoothScrolling();\n    initializeFormValidation();\n    initializeScrollAnimations();\n    initializeParallaxEffects();\n    initializeProjectBuilder();\n});\n\n/**\n * Navigation functionality\n */\nfunction initializeNavigation() {\n    const navbar = document.querySelector('.navbar');\n    const navLinks = document.querySelectorAll('.nav-link');\n    \n    // Navbar scroll effect\n    window.addEventListener('scroll', function() {\n        if (window.scrollY > 50) {\n            navbar.classList.add('scrolled');\n        } else {\n            navbar.classList.remove('scrolled');\n        }\n    });\n    \n    // Active navigation link highlighting\n    window.addEventListener('scroll', function() {\n        const sections = document.querySelectorAll('section[id]');\n        const scrollPosition = window.scrollY + 100;\n        \n        sections.forEach(section => {\n            const sectionTop = section.offsetTop;\n            const sectionHeight = section.offsetHeight;\n            const sectionId = section.getAttribute('id');\n            \n            if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {\n                // Remove active class from all nav links\n                navLinks.forEach(link => link.classList.remove('active'));\n                \n                // Add active class to current section's nav link\n                const activeLink = document.querySelector(`.nav-link[href=\"#${sectionId}\"]`);\n                if (activeLink) {\n                    activeLink.classList.add('active');\n                }\n            }\n        });\n    });\n    \n    // Mobile menu close on link click\n    navLinks.forEach(link => {\n        link.addEventListener('click', function() {\n            const navbarCollapse = document.querySelector('.navbar-collapse');\n            if (navbarCollapse.classList.contains('show')) {\n                const bsCollapse = new bootstrap.Collapse(navbarCollapse);\n                bsCollapse.hide();\n            }\n        });\n    });\n}\n\n/**\n * Smooth scrolling for anchor links\n */\nfunction initializeSmoothScrolling() {\n    const smoothScrollLinks = document.querySelectorAll('.smooth-scroll, .nav-link[href^=\"#\"]');\n    \n    smoothScrollLinks.forEach(link => {\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            \n            const targetId = this.getAttribute('href');\n            const targetElement = document.querySelector(targetId);\n            \n            if (targetElement) {\n                const headerOffset = 80; // Account for fixed navbar\n                const elementPosition = targetElement.offsetTop;\n                const offsetPosition = elementPosition - headerOffset;\n                \n                window.scrollTo({\n                    top: offsetPosition,\n                    behavior: 'smooth'\n                });\n            }\n        });\n    });\n}\n\n/**\n * Form validation and submission\n */\nfunction initializeFormValidation() {\n    const contactForm = document.getElementById('contactForm');\n    const successMessage = document.getElementById('successMessage');\n    \n    if (!contactForm) return;\n    \n    // Custom validation messages\n    const validationMessages = {\n        firstName: 'Voornaam is verplicht',\n        lastName: 'Achternaam is verplicht',\n        email: 'Een geldig e-mailadres is verplicht',\n        service: 'Selecteer alstublieft een service',\n        message: 'Een bericht is verplicht',\n        privacy: 'U moet akkoord gaan met het privacybeleid'\n    };\n    \n    // Real-time validation\n    const formInputs = contactForm.querySelectorAll('input, select, textarea');\n    formInputs.forEach(input => {\n        input.addEventListener('blur', function() {\n            validateField(this);\n        });\n        \n        input.addEventListener('input', function() {\n            if (this.classList.contains('is-invalid')) {\n                validateField(this);\n            }\n        });\n    });\n    \n    // Form submission\n    contactForm.addEventListener('submit', function(e) {\n        e.preventDefault();\n        \n        // Validate all fields\n        let isFormValid = true;\n        formInputs.forEach(input => {\n            if (!validateField(input)) {\n                isFormValid = false;\n            }\n        });\n        \n        if (isFormValid) {\n            submitForm();\n        } else {\n            // Scroll to first invalid field\n            const firstInvalidField = contactForm.querySelector('.is-invalid');\n            if (firstInvalidField) {\n                firstInvalidField.scrollIntoView({ \n                    behavior: 'smooth', \n                    block: 'center' \n                });\n                firstInvalidField.focus();\n            }\n        }\n    });\n    \n    /**\n     * Validate individual form field\n     */\n    function validateField(field) {\n        const fieldValue = field.value.trim();\n        const fieldType = field.type;\n        const fieldId = field.id;\n        let isValid = true;\n        \n        // Remove existing validation classes\n        field.classList.remove('is-valid', 'is-invalid');\n        \n        // Required field validation\n        if (field.hasAttribute('required') && !fieldValue) {\n            isValid = false;\n        }\n        \n        // Email validation\n        if (fieldType === 'email' && fieldValue) {\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n            if (!emailRegex.test(fieldValue)) {\n                isValid = false;\n            }\n        }\n        \n        // Checkbox validation\n        if (fieldType === 'checkbox' && field.hasAttribute('required')) {\n            if (!field.checked) {\n                isValid = false;\n            }\n        }\n        \n        // Apply validation styles\n        if (isValid) {\n            field.classList.add('is-valid');\n        } else {\n            field.classList.add('is-invalid');\n            \n            // Update custom validation message\n            const feedback = field.parentNode.querySelector('.invalid-feedback');\n            if (feedback && validationMessages[fieldId]) {\n                feedback.textContent = validationMessages[fieldId];\n            }\n        }\n        \n        return isValid;\n    }\n    \n    /**\n     * Submit form (simulate submission)\n     */\n    function submitForm() {\n        const submitButton = contactForm.querySelector('button[type=\"submit\"]');\n        const originalText = submitButton.innerHTML;\n        \n        // Show loading state\n        submitButton.disabled = true;\n        submitButton.innerHTML = '<i class=\"fas fa-spinner fa-spin me-2\"></i>Versturen...';\n        \n        // Simulate form submission delay\n        setTimeout(() => {\n            // Hide form and show success message\n            contactForm.style.display = 'none';\n            successMessage.classList.remove('d-none');\n            \n            // Scroll to success message\n            successMessage.scrollIntoView({ \n                behavior: 'smooth', \n                block: 'center' \n            });\n            \n            // Reset form after delay\n            setTimeout(() => {\n                contactForm.reset();\n                contactForm.classList.remove('was-validated');\n                \n                // Remove validation classes\n                formInputs.forEach(input => {\n                    input.classList.remove('is-valid', 'is-invalid');\n                });\n                \n                // Reset button\n                submitButton.disabled = false;\n                submitButton.innerHTML = originalText;\n                \n                // Show form again after 5 seconds\n                setTimeout(() => {\n                    contactForm.style.display = 'block';\n                    successMessage.classList.add('d-none');\n                }, 5000);\n                \n            }, 1000);\n            \n        }, 2000);\n    }\n}\n\n/**\n * Scroll animations for elements\n */\nfunction initializeScrollAnimations() {\n    // Intersection Observer for fade-in animations\n    const observerOptions = {\n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n    };\n    \n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                entry.target.classList.add('animate-in');\n            }\n        });\n    }, observerOptions);\n    \n    // Observe elements for animation\n    const animateElements = document.querySelectorAll('.service-card, .stat-item');\n    animateElements.forEach(el => {\n        observer.observe(el);\n    });\n    \n    // Add CSS for animations\n    const style = document.createElement('style');\n    style.textContent = `\n        .service-card, .stat-item {\n            opacity: 0;\n            transform: translateY(30px);\n            transition: all 0.6s ease;\n        }\n        \n        .service-card.animate-in, .stat-item.animate-in {\n            opacity: 1;\n            transform: translateY(0);\n        }\n        \n        .service-card:nth-child(2).animate-in {\n            transition-delay: 0.2s;\n        }\n        \n        .stat-item:nth-child(2).animate-in {\n            transition-delay: 0.1s;\n        }\n        \n        .stat-item:nth-child(3).animate-in {\n            transition-delay: 0.2s;\n        }\n        \n        .stat-item:nth-child(4).animate-in {\n            transition-delay: 0.3s;\n        }\n    `;\n    document.head.appendChild(style);\n}\n\n/**\n * Parallax and interactive effects\n */\nfunction initializeParallaxEffects() {\n    // Hero section parallax effect\n    const heroSection = document.querySelector('.hero-section');\n    const heroIcon = document.querySelector('.hero-icon');\n    \n    if (heroSection && heroIcon) {\n        window.addEventListener('scroll', () => {\n            const scrolled = window.pageYOffset;\n            const rate = scrolled * -0.5;\n            \n            if (scrolled < heroSection.offsetHeight) {\n                heroIcon.style.transform = `translateY(${rate}px)`;\n            }\n        });\n    }\n    \n    // Mouse movement effect for service cards\n    const serviceCards = document.querySelectorAll('.service-card');\n    \n    serviceCards.forEach(card => {\n        card.addEventListener('mousemove', (e) => {\n            const rect = card.getBoundingClientRect();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            \n            const centerX = rect.width / 2;\n            const centerY = rect.height / 2;\n            \n            const rotateX = (y - centerY) / 10;\n            const rotateY = (centerX - x) / 10;\n            \n            card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateY(-10px)`;\n        });\n        \n        card.addEventListener('mouseleave', () => {\n            card.style.transform = '';\n        });\n    });\n    \n    // Add typing effect to hero title\n    const heroTitle = document.querySelector('.hero-content h1');\n    if (heroTitle) {\n        const originalText = heroTitle.textContent;\n        heroTitle.textContent = '';\n        \n        let i = 0;\n        const typeWriter = () => {\n            if (i < originalText.length) {\n                heroTitle.textContent += originalText.charAt(i);\n                i++;\n                setTimeout(typeWriter, 50);\n            }\n        };\n        \n        // Start typing effect after page load\n        setTimeout(typeWriter, 1000);\n    }\n}\n\n/**\n * Utility function to throttle scroll events\n */\nfunction throttle(func, limit) {\n    let inThrottle;\n    return function() {\n        const args = arguments;\n        const context = this;\n        if (!inThrottle) {\n            func.apply(context, args);\n            inThrottle = true;\n            setTimeout(() => inThrottle = false, limit);\n        }\n    };\n}\n\n/**\n * Add keyboard navigation support\n */\ndocument.addEventListener('keydown', function(e) {\n    // ESC key to close mobile menu\n    if (e.key === 'Escape') {\n        const navbarCollapse = document.querySelector('.navbar-collapse.show');\n        if (navbarCollapse) {\n            const bsCollapse = new bootstrap.Collapse(navbarCollapse);\n            bsCollapse.hide();\n        }\n    }\n});\n\n/**\n * Performance optimization: Lazy load heavy elements\n */\nwindow.addEventListener('load', function() {\n    // Remove loading states\n    document.body.classList.remove('loading');\n    \n    // Initialize any heavy libraries here\n    console.log('TechFlow Solutions website loaded successfully!');\n});\n\n/**\n * Project Builder functionality\n */\nfunction initializeProjectBuilder() {\n    const projectBuilder = document.getElementById('projectBuilder');\n    if (!projectBuilder) return;\n    \n    // State management\n    let currentStep = 'step0';\n    let selectedService = '';\n    let selections = {\n        // Web development\n        packageType: '',\n        domainHosting: '',\n        services: [],\n        modules: [],\n        // Cloud services\n        cloudEnvironment: '',\n        currentProvider: '',\n        challenges: [],\n        migrationPlans: '',\n        migrationGoals: [],\n        technologies: []\n    };\n    \n    // Step navigation\n    function showStep(stepId) {\n        // Hide all steps\n        document.querySelectorAll('.builder-step').forEach(step => {\n            step.classList.remove('active');\n        });\n        \n        // Show current step\n        document.getElementById(stepId).classList.add('active');\n        currentStep = stepId;\n        \n        // Update navigation buttons\n        updateNavigation();\n        \n        // Scroll to project builder\n        document.getElementById('project-builder').scrollIntoView({ \n            behavior: 'smooth', \n            block: 'start' \n        });\n    }\n    \n    function updateNavigation() {\n        const prevBtn = document.getElementById('prevStep');\n        const navigationDiv = document.querySelector('.builder-navigation');\n        \n        // Hide navigation completely for step0 and finalStep\n        if (currentStep === 'step0' || currentStep === 'finalStep') {\n            navigationDiv.style.display = 'none';\n        } else {\n            navigationDiv.style.display = 'block';\n            prevBtn.disabled = false;\n        }\n    }\n    \n    // Handle option cards\n    projectBuilder.addEventListener('click', function(e) {\n        \n        const optionCard = e.target.closest('.option-card');\n        if (!optionCard) return;\n        \n        const isMultiSelect = optionCard.classList.contains('multi');\n        const value = optionCard.dataset.value;\n        const nextStep = optionCard.dataset.next;\n        \n        if (isMultiSelect) {\n            // Handle multi-select options\n            handleMultiSelect(optionCard, value);\n        } else {\n            // Handle single select options\n            handleSingleSelect(optionCard, value, nextStep);\n        }\n    });\n    \n    // Custom tooltip functionality\n    let currentTooltip = null;\n    \n    // Initialize tooltips after a short delay to ensure all elements are ready\n    setTimeout(() => {\n        // Add hover listeners to all info icons\n        document.querySelectorAll('.info-icon').forEach(icon => {\n            const card = icon.closest('button[title]');\n            if (card) {\n                const tooltipText = card.getAttribute('title');\n                icon.addEventListener('mouseenter', function(e) {\n                    showTooltip(this, tooltipText);\n                });\n                \n                icon.addEventListener('mouseleave', function(e) {\n                    hideTooltip();\n                });\n                \n                // Store tooltip text and remove title attribute to prevent default browser tooltip\n                card.removeAttribute('title');\n                card.setAttribute('data-tooltip', tooltipText || '');\n            }\n        });\n    }, 100);\n    \n    function showTooltip(infoIcon, tooltipText) {\n        // Remove existing tooltip\n        hideTooltip();\n        \n        if (!tooltipText) return;\n        \n        // Create tooltip\n        const tooltip = document.createElement('div');\n        tooltip.className = 'simple-tooltip';\n        tooltip.innerHTML = tooltipText;\n        \n        // Add to body\n        document.body.appendChild(tooltip);\n        \n        // Position tooltip\n        const iconRect = infoIcon.getBoundingClientRect();\n        const tooltipRect = tooltip.getBoundingClientRect();\n        \n        // Position above the icon, centered horizontally\n        let top = iconRect.top - tooltipRect.height - 15;\n        let left = iconRect.left + (iconRect.width / 2) - (tooltipRect.width / 2);\n        \n        // Ensure tooltip stays within viewport\n        if (left < 10) left = 10;\n        if (left + tooltipRect.width > window.innerWidth - 10) {\n            left = window.innerWidth - tooltipRect.width - 10;\n        }\n        if (top < 10) {\n            top = iconRect.bottom + 15; // Show below if no space above\n        }\n        \n        tooltip.style.top = top + 'px';\n        tooltip.style.left = left + 'px';\n        \n        currentTooltip = tooltip;\n    }\n    \n    function hideTooltip() {\n        if (currentTooltip) {\n            currentTooltip.remove();\n            currentTooltip = null;\n        }\n    }\n    \n    function handleSingleSelect(card, value, nextStep) {\n        // Remove active class from siblings\n        card.parentNode.querySelectorAll('.option-card').forEach(sibling => {\n            sibling.classList.remove('active');\n        });\n        \n        // Add active class to selected card\n        card.classList.add('active');\n        \n        // Store selection\n        if (currentStep === 'step0') {\n            selectedService = value;\n        } else if (currentStep === 'step1-webdev') {\n            selections.packageType = value;\n        } else if (currentStep === 'step2a-webdev') {\n            selections.domainHosting = value;\n        } else if (currentStep === 'step1-cloud') {\n            selections.cloudEnvironment = value;\n        } else if (currentStep === 'step2a-cloud') {\n            selections.currentProvider = value;\n        } else if (currentStep === 'step2b-cloud') {\n            selections.migrationPlans = value;\n        }\n        \n        // Move to next step after delay\n        setTimeout(() => {\n            if (nextStep) {\n                showStep(nextStep);\n            }\n        }, 500);\n    }\n    \n    function handleMultiSelect(card, value) {\n        card.classList.toggle('active');\n        \n        if (currentStep === 'step2b-webdev') {\n            if (card.classList.contains('active')) {\n                if (!selections.services.includes(value)) {\n                    selections.services.push(value);\n                }\n            } else {\n                selections.services = selections.services.filter(s => s !== value);\n            }\n            \n            // Enable/disable continue button\n            const continueBtn = document.getElementById('continueStep2b-webdev');\n            continueBtn.disabled = selections.services.length === 0;\n            \n        } else if (currentStep === 'step3a-cloud') {\n            // Cloud challenges\n            if (card.classList.contains('active')) {\n                if (!selections.challenges.includes(value)) {\n                    selections.challenges.push(value);\n                }\n            } else {\n                selections.challenges = selections.challenges.filter(c => c !== value);\n            }\n            \n        } else if (currentStep === 'step3b-cloud') {\n            // Cloud migration goals\n            if (card.classList.contains('active')) {\n                if (!selections.migrationGoals.includes(value)) {\n                    selections.migrationGoals.push(value);\n                }\n            } else {\n                selections.migrationGoals = selections.migrationGoals.filter(g => g !== value);\n            }\n            \n        } else if (currentStep === 'step5-cloud') {\n            // Cloud technologies\n            if (card.classList.contains('active')) {\n                if (!selections.technologies.includes(value)) {\n                    selections.technologies.push(value);\n                }\n            } else {\n                selections.technologies = selections.technologies.filter(t => t !== value);\n            }\n            \n        } else if (currentStep === 'step4-webdev') {\n            // Handle \"none\" selection\n            if (value === 'none') {\n                if (card.classList.contains('active')) {\n                    // Deselect all other modules\n                    card.parentNode.querySelectorAll('.option-card').forEach(sibling => {\n                        if (sibling !== card) {\n                            sibling.classList.remove('active');\n                        }\n                    });\n                    selections.modules = ['none'];\n                } else {\n                    selections.modules = [];\n                }\n            } else {\n                // Deselect \"none\" if other module is selected\n                const noneCard = card.parentNode.querySelector('[data-value=\"none\"]');\n                if (noneCard && noneCard.classList.contains('active')) {\n                    noneCard.classList.remove('active');\n                    selections.modules = selections.modules.filter(m => m !== 'none');\n                }\n                \n                if (card.classList.contains('active')) {\n                    if (!selections.modules.includes(value)) {\n                        selections.modules.push(value);\n                    }\n                } else {\n                    selections.modules = selections.modules.filter(m => m !== value);\n                }\n            }\n        }\n    }\n    \n    // Continue buttons - Web Dev\n    const continueStep2bWebdev = document.getElementById('continueStep2b-webdev');\n    if (continueStep2bWebdev) {\n        continueStep2bWebdev.addEventListener('click', function() {\n            showStep('step4-webdev');\n        });\n    }\n    \n    const continueStep4Webdev = document.getElementById('continueStep4-webdev');\n    if (continueStep4Webdev) {\n        continueStep4Webdev.addEventListener('click', function() {\n            generateWebDevSummary();\n            showStep('step5-webdev');\n        });\n    }\n    \n    // Continue buttons - Cloud\n    const continueStep3aCloud = document.getElementById('continueStep3a-cloud');\n    if (continueStep3aCloud) {\n        continueStep3aCloud.addEventListener('click', function(e) {\n            console.log('Continue button step3a-cloud clicked!');\n            e.preventDefault();\n            e.stopPropagation();\n            showStep('step5-cloud');\n        });\n    }\n    \n    const continueStep3bCloud = document.getElementById('continueStep3b-cloud');\n    if (continueStep3bCloud) {\n        continueStep3bCloud.addEventListener('click', function() {\n            showStep('step5-cloud');\n        });\n    }\n    \n    const continueStep5Cloud = document.getElementById('continueStep5-cloud');\n    if (continueStep5Cloud) {\n        continueStep5Cloud.addEventListener('click', function() {\n            generateCloudSummary();\n            showStep('step6-cloud');\n        });\n    }\n    \n    // Start project builder buttons\n    const startBuilderBtn = document.getElementById('startProjectBuilder');\n    const startCloudBtn = document.getElementById('startCloudBuilder');\n    \n    if (startBuilderBtn) {\n        startBuilderBtn.addEventListener('click', function() {\n            selectedService = 'web-development';\n            document.getElementById('project-builder').scrollIntoView({ \n                behavior: 'smooth', \n                block: 'start' \n            });\n            setTimeout(() => {\n                showStep('step1-webdev');\n            }, 500);\n        });\n    }\n    \n    if (startCloudBtn) {\n        startCloudBtn.addEventListener('click', function() {\n            selectedService = 'cloud-services';\n            document.getElementById('project-builder').scrollIntoView({ \n                behavior: 'smooth', \n                block: 'start' \n            });\n            setTimeout(() => {\n                showStep('step1-cloud');\n            }, 500);\n        });\n    }\n\n    // Final buttons - Web Dev\n    const startProjectWebdev = document.getElementById('startProject-webdev');\n    if (startProjectWebdev) {\n        startProjectWebdev.addEventListener('click', function() {\n            showFinalMessage('success', 'webdev');\n        });\n    }\n    \n    const saveForLaterWebdev = document.getElementById('saveForLater-webdev');\n    if (saveForLaterWebdev) {\n        saveForLaterWebdev.addEventListener('click', function() {\n            showFinalMessage('saved', 'webdev');\n        });\n    }\n    \n    // Final buttons - Cloud\n    const startProjectCloud = document.getElementById('startProject-cloud');\n    if (startProjectCloud) {\n        startProjectCloud.addEventListener('click', function() {\n            showFinalMessage('success', 'cloud');\n        });\n    }\n    \n    const saveForLaterCloud = document.getElementById('saveForLater-cloud');\n    if (saveForLaterCloud) {\n        saveForLaterCloud.addEventListener('click', function() {\n            showFinalMessage('saved', 'cloud');\n        });\n    }\n    \n    // Legacy final buttons (keeping for compatibility)\n    const startProject = document.getElementById('startProject');\n    if (startProject) {\n        startProject.addEventListener('click', function() {\n            showFinalMessage('success', 'webdev');\n        });\n    }\n    \n    const saveForLater = document.getElementById('saveForLater');\n    if (saveForLater) {\n        saveForLater.addEventListener('click', function() {\n            showFinalMessage('saved', 'webdev');\n        });\n    }\n    \n    document.getElementById('restartBuilder').addEventListener('click', function() {\n        restartBuilder();\n    });\n    \n    // Previous button\n    document.getElementById('prevStep').addEventListener('click', function() {\n        goToPreviousStep();\n    });\n    \n    \n    function generateSummary() {\n        // Legacy function for compatibility - use generateWebDevSummary instead\n        generateWebDevSummary();\n    }\n    \n    function generateWebDevSummary() {\n        const summaryContent = document.getElementById('summaryContent-webdev') || document.getElementById('summaryContent');\n        let html = '<div class=\"summary-items\">';\n        \n        // Package type\n        if (selections.packageType === 'complete-package') {\n            html += '<div class=\"summary-item\"><i class=\"fas fa-box-open text-primary\"></i> <strong>Compleet pakket</strong></div>';\n            \n            if (selections.domainHosting === 'domain-hosting-yes') {\n                html += '<div class=\"summary-item\"><i class=\"fas fa-check-circle text-success\"></i> Alleen design (domein + hosting aanwezig)</div>';\n            } else {\n                html += '<div class=\"summary-item\"><i class=\"fas fa-tools text-info\"></i> Alles regelen (domein + hosting + design)</div>';\n            }\n        } else {\n            html += '<div class=\"summary-item\"><i class=\"fas fa-puzzle-piece text-primary\"></i> <strong>Losse diensten:</strong></div>';\n            \n            const serviceLabels = {\n                'webdesign': 'Webdesign',\n                'hosting': 'Hosting',\n                'domain': 'Domeinregistratie'\n            };\n            \n            selections.services.forEach(service => {\n                html += `<div class=\"summary-item\"><i class=\"fas fa-check text-success\"></i> ${serviceLabels[service]}</div>`;\n            });\n        }\n        \n        // Modules\n        if (selections.modules.length > 0 && !selections.modules.includes('none')) {\n            html += '<div class=\"summary-item mt-3\"><strong>Extra modules:</strong></div>';\n            \n            const moduleLabels = {\n                'seo': 'SEO-optimalisatie',\n                'maintenance': 'Onderhoud & updates',\n                'webshop': 'Webshop',\n                'cms-training': 'CMS-training',\n                'branding': 'Branding / logo / huisstijl'\n            };\n            \n            selections.modules.forEach(module => {\n                if (moduleLabels[module]) {\n                    html += `<div class=\"summary-item\"><i class=\"fas fa-plus text-info\"></i> ${moduleLabels[module]}</div>`;\n                }\n            });\n        } else {\n            html += '<div class=\"summary-item mt-3\"><i class=\"fas fa-times text-muted\"></i> Geen extra modules</div>';\n        }\n        \n        html += '</div>';\n        summaryContent.innerHTML = html;\n    }\n    \n    function generateCloudSummary() {\n        const summaryContent = document.getElementById('summaryContent-cloud');\n        let html = '<div class=\"summary-items\">';\n        \n        // Current cloud environment\n        if (selections.cloudEnvironment === 'cloud-yes') {\n            html += '<div class=\"summary-item\"><i class=\"fas fa-cloud text-primary\"></i> <strong>Huidige situatie:</strong> Gebruikt al cloud services</div>';\n            \n            if (selections.currentProvider) {\n                const providerLabels = {\n                    'aws': 'Amazon Web Services (AWS)',\n                    'azure': 'Microsoft Azure',\n                    'gcp': 'Google Cloud Platform',\n                    'other-provider': 'Andere provider'\n                };\n                html += `<div class=\"summary-item\"><i class=\"fas fa-server text-info\"></i> Provider: ${providerLabels[selections.currentProvider]}</div>`;\n            }\n            \n            // Challenges\n            if (selections.challenges.length > 0) {\n                html += '<div class=\"summary-item mt-3\"><strong>Uitdagingen:</strong></div>';\n                const challengeLabels = {\n                    'cost-management': 'Kostenbeheersing',\n                    'security': 'Beveiliging',\n                    'monitoring': 'Monitoring',\n                    'scalability': 'Schaalbaarheid',\n                    'devops': 'CI/CD of DevOps automatisering',\n                    'containers': 'Containerbeheer (Docker/Kubernetes)',\n                    'other-challenge': 'Anders'\n                };\n                \n                selections.challenges.forEach(challenge => {\n                    if (challengeLabels[challenge]) {\n                        html += `<div class=\"summary-item\"><i class=\"fas fa-exclamation-triangle text-warning\"></i> ${challengeLabels[challenge]}</div>`;\n                    }\n                });\n            }\n        } else {\n            html += '<div class=\"summary-item\"><i class=\"fas fa-cloud text-primary\"></i> <strong>Huidige situatie:</strong> Nog geen cloud services</div>';\n            \n            if (selections.migrationPlans) {\n                const planLabels = {\n                    'migration-3months': 'Migratie binnen 3 maanden',\n                    'migration-6months': 'Migratie binnen 6 maanden',\n                    'migration-exploring': 'Nog aan het oriënteren',\n                    'migration-no': 'Geen concrete plannen'\n                };\n                html += `<div class=\"summary-item\"><i class=\"fas fa-calendar text-info\"></i> ${planLabels[selections.migrationPlans]}</div>`;\n            }\n            \n            // Migration goals\n            if (selections.migrationGoals.length > 0) {\n                html += '<div class=\"summary-item mt-3\"><strong>Wat naar cloud:</strong></div>';\n                const goalLabels = {\n                    'website-app': 'Website / applicatie',\n                    'backend-api': 'Backend / API',\n                    'data-storage': 'Data & opslag',\n                    'cicd-pipelines': 'CI/CD pipelines',\n                    'full-infrastructure': 'Volledige infrastructuur'\n                };\n                \n                selections.migrationGoals.forEach(goal => {\n                    if (goalLabels[goal]) {\n                        html += `<div class=\"summary-item\"><i class=\"fas fa-arrow-up text-success\"></i> ${goalLabels[goal]}</div>`;\n                    }\n                });\n            }\n        }\n        \n        // Technologies\n        if (selections.technologies.length > 0) {\n            html += '<div class=\"summary-item mt-3\"><strong>Relevante technologieën:</strong></div>';\n            const techLabels = {\n                'devops-cicd': 'DevOps & CI/CD',\n                'container-orchestration': 'Container orchestration (Docker/Kubernetes)',\n                'monitoring-support': '24/7 monitoring & support',\n                'infrastructure-code': 'Infrastructure-as-Code',\n                'load-balancing': 'Load balancing & scaling',\n                'identity-access': 'Identity & Access Management',\n                'other-tech': 'Anders'\n            };\n            \n            selections.technologies.forEach(tech => {\n                if (techLabels[tech]) {\n                    html += `<div class=\"summary-item\"><i class=\"fas fa-cog text-info\"></i> ${techLabels[tech]}</div>`;\n                }\n            });\n        }\n        \n        html += '</div>';\n        summaryContent.innerHTML = html;\n    }\n    \n    function showFinalMessage(type, service = 'webdev') {\n        const finalMessage = document.getElementById('finalMessage');\n        \n        if (service === 'cloud') {\n            if (type === 'success') {\n                finalMessage.innerHTML = `\n                    <div class=\"alert alert-success\">\n                        <i class=\"fas fa-handshake fa-2x mb-3\"></i>\n                        <h4>Uitstekend!</h4>\n                        <p>Binnen 24 uur neemt een van onze cloud specialisten contact met u op voor een vrijblijvend adviesgesprek over uw cloud behoeften.</p>\n                    </div>\n                `;\n            } else {\n                finalMessage.innerHTML = `\n                    <div class=\"alert alert-info\">\n                        <i class=\"fas fa-bookmark fa-2x mb-3\"></i>\n                        <h4>Informatie bewaard!</h4>\n                        <p>We hebben uw cloud behoeften genoteerd. U kunt altijd terugkomen voor meer informatie of advies.</p>\n                    </div>\n                `;\n            }\n        } else {\n            if (type === 'success') {\n                finalMessage.innerHTML = `\n                    <div class=\"alert alert-success\">\n                        <i class=\"fas fa-rocket fa-2x mb-3\"></i>\n                        <h4>Fantastisch!</h4>\n                        <p>Wij gaan direct aan de slag met uw project. Binnen 24 uur neemt een van onze specialisten contact met u op om de details door te spreken.</p>\n                    </div>\n                `;\n            } else {\n                finalMessage.innerHTML = `\n                    <div class=\"alert alert-info\">\n                        <i class=\"fas fa-bookmark fa-2x mb-3\"></i>\n                        <h4>Opgeslagen!</h4>\n                        <p>We hebben uw keuzes bewaard. U kunt altijd terugkomen om uw project verder uit te werken. Geen zorgen, we versturen geen spam!</p>\n                    </div>\n                `;\n            }\n        }\n        \n        showStep('finalStep');\n    }\n    \n    function restartBuilder() {\n        // Reset selections\n        selectedService = '';\n        selections = {\n            // Web development\n            packageType: '',\n            domainHosting: '',\n            services: [],\n            modules: [],\n            // Cloud services\n            cloudEnvironment: '',\n            currentProvider: '',\n            challenges: [],\n            migrationPlans: '',\n            migrationGoals: [],\n            technologies: []\n        };\n        \n        // Reset all cards\n        document.querySelectorAll('.option-card').forEach(card => {\n            card.classList.remove('active');\n        });\n        \n        // Reset continue buttons\n        const continueButtons = [\n            'continueStep2b-webdev',\n            'continueStep3a-cloud',\n            'continueStep3b-cloud',\n            'continueStep5-cloud'\n        ];\n        \n        continueButtons.forEach(buttonId => {\n            const button = document.getElementById(buttonId);\n            if (button) {\n                button.disabled = true;\n            }\n        });\n        \n        // Go to first step\n        showStep('step0');\n    }\n    \n    function goToPreviousStep() {\n        // Web Development flow\n        if (currentStep === 'step1-webdev') {\n            showStep('step0');\n        } else if (currentStep === 'step2a-webdev' || currentStep === 'step2b-webdev') {\n            showStep('step1-webdev');\n        } else if (currentStep === 'step4-webdev') {\n            if (selections.packageType === 'complete-package') {\n                showStep('step2a-webdev');\n            } else {\n                showStep('step2b-webdev');\n            }\n        } else if (currentStep === 'step5-webdev') {\n            showStep('step4-webdev');\n        }\n        // Cloud Services flow\n        else if (currentStep === 'step1-cloud') {\n            showStep('step0');\n        } else if (currentStep === 'step2a-cloud' || currentStep === 'step2b-cloud') {\n            showStep('step1-cloud');\n        } else if (currentStep === 'step3a-cloud') {\n            showStep('step2a-cloud');\n        } else if (currentStep === 'step3b-cloud') {\n            showStep('step2b-cloud');\n        } else if (currentStep === 'step5-cloud') {\n            if (selections.cloudEnvironment === 'cloud-yes') {\n                showStep('step3a-cloud');\n            } else {\n                showStep('step3b-cloud');\n            }\n        } else if (currentStep === 'step6-cloud') {\n            showStep('step5-cloud');\n        }\n        // Legacy support\n        else if (currentStep === 'step2a' || currentStep === 'step2b') {\n            showStep('step1');\n        } else if (currentStep === 'step4') {\n            if (selections.packageType === 'complete-package') {\n                showStep('step2a');\n            } else {\n                showStep('step2b');\n            }\n        } else if (currentStep === 'step5') {\n            showStep('step4');\n        }\n    }\n}\n\n/**\n * Error handling for missing elements\n */\nwindow.addEventListener('error', function(e) {\n    console.warn('Non-critical error:', e.message);\n});\n","size_bytes":38452},"style.css":{"content":"/* Custom CSS for TechFlow Solutions */\n\n/* Global Styles */\n:root {\n    --primary-gradient: linear-gradient(135deg, var(--bs-primary) 0%, var(--bs-info) 100%);\n    --hero-height: 100vh;\n    --section-padding: 5rem 0;\n}\n\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    line-height: 1.6;\n    scroll-behavior: smooth;\n}\n\n/* Navigation Styles */\n.navbar {\n    background: rgba(13, 17, 23, 0.95);\n    backdrop-filter: blur(10px);\n    transition: all 0.3s ease;\n    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n}\n\n.navbar.scrolled {\n    background: rgba(13, 17, 23, 0.98);\n    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.2);\n}\n\n.navbar-brand {\n    font-size: 1.5rem;\n    background: var(--primary-gradient);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n.nav-link {\n    font-weight: 500;\n    transition: color 0.3s ease;\n    position: relative;\n}\n\n.nav-link:hover {\n    color: var(--bs-primary) !important;\n}\n\n.nav-link::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 50%;\n    width: 0;\n    height: 2px;\n    background: var(--primary-gradient);\n    transition: all 0.3s ease;\n    transform: translateX(-50%);\n}\n\n.nav-link:hover::after {\n    width: 100%;\n}\n\n/* Hero Section */\n.hero-section {\n    min-height: var(--hero-height);\n    display: flex;\n    align-items: center;\n    position: relative;\n    background: linear-gradient(135deg, \n        rgba(13, 17, 23, 0.9) 0%, \n        rgba(21, 32, 43, 0.8) 50%, \n        rgba(13, 17, 23, 0.9) 100%);\n    overflow: hidden;\n}\n\n.hero-section::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.03'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n    animation: float 20s ease-in-out infinite;\n}\n\n@keyframes float {\n    0%, 100% { transform: translateY(0px); }\n    50% { transform: translateY(-20px); }\n}\n\n.hero-content {\n    position: relative;\n    z-index: 2;\n}\n\n.hero-content h1 {\n    background: var(--primary-gradient);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    animation: fadeInUp 1s ease-out;\n}\n\n.hero-content p {\n    animation: fadeInUp 1s ease-out 0.2s both;\n}\n\n.hero-content .d-flex {\n    animation: fadeInUp 1s ease-out 0.4s both;\n}\n\n.hero-icon {\n    font-size: 15rem;\n    color: var(--bs-primary);\n    opacity: 0.1;\n    animation: pulse 2s ease-in-out infinite;\n}\n\n@keyframes pulse {\n    0%, 100% { transform: scale(1); opacity: 0.1; }\n    50% { transform: scale(1.05); opacity: 0.15; }\n}\n\n@keyframes fadeInUp {\n    from {\n        opacity: 0;\n        transform: translateY(30px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* Button Styles */\n.btn {\n    border-radius: 50px;\n    padding: 12px 30px;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    transition: all 0.3s ease;\n    border: 2px solid transparent;\n}\n\n.btn-primary {\n    background: var(--primary-gradient);\n    border: 2px solid transparent;\n    box-shadow: 0 4px 15px rgba(13, 110, 253, 0.3);\n}\n\n.btn-primary:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(13, 110, 253, 0.4);\n}\n\n.btn-outline-secondary {\n    border: 2px solid var(--bs-secondary);\n    color: var(--bs-secondary);\n}\n\n.btn-outline-secondary:hover {\n    background: var(--bs-secondary);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);\n}\n\n/* Service Cards */\n.service-card {\n    background: var(--bs-dark);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 20px;\n    transition: all 0.3s ease;\n    overflow: hidden;\n    position: relative;\n}\n\n.service-card::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, \n        transparent, \n        rgba(255, 255, 255, 0.05), \n        transparent);\n    transition: left 0.5s ease;\n}\n\n.service-card:hover::before {\n    left: 100%;\n}\n\n.service-card:hover {\n    transform: translateY(-10px);\n    border-color: var(--bs-primary);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n}\n\n.service-icon {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    background: var(--primary-gradient);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 1.5rem;\n}\n\n.service-icon i {\n    font-size: 2rem;\n    color: white;\n}\n\n/* About Section */\n.about-icon {\n    font-size: 12rem;\n    color: var(--bs-primary);\n    opacity: 0.2;\n    animation: rotate 20s linear infinite;\n}\n\n@keyframes rotate {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n}\n\n.stat-item {\n    padding: 1rem;\n    border-radius: 15px;\n    background: rgba(255, 255, 255, 0.02);\n    border: 1px solid rgba(255, 255, 255, 0.05);\n    transition: all 0.3s ease;\n}\n\n.stat-item:hover {\n    background: rgba(255, 255, 255, 0.05);\n    transform: translateY(-5px);\n}\n\n/* Contact Form */\n.contact-form {\n    background: var(--bs-dark);\n    padding: 3rem;\n    border-radius: 20px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n}\n\n.form-control, .form-select {\n    background: rgba(255, 255, 255, 0.05);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 10px;\n    padding: 15px;\n    transition: all 0.3s ease;\n}\n\n.form-control:focus, .form-select:focus {\n    background: rgba(255, 255, 255, 0.08);\n    border-color: var(--bs-primary);\n    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);\n}\n\n.form-label {\n    font-weight: 600;\n    color: var(--bs-light);\n    margin-bottom: 0.5rem;\n}\n\n/* Form Validation Styles */\n.was-validated .form-control:valid,\n.was-validated .form-select:valid {\n    border-color: var(--bs-success);\n}\n\n.was-validated .form-control:invalid,\n.was-validated .form-select:invalid {\n    border-color: var(--bs-danger);\n}\n\n/* Footer */\nfooter {\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.social-links a {\n    font-size: 1.5rem;\n    transition: all 0.3s ease;\n}\n\n.social-links a:hover {\n    color: var(--bs-primary) !important;\n    transform: translateY(-2px);\n}\n\n/* Smooth Scrolling */\n.smooth-scroll {\n    scroll-behavior: smooth;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .hero-icon {\n        font-size: 8rem;\n    }\n    \n    .about-icon {\n        font-size: 8rem;\n    }\n    \n    .contact-form {\n        padding: 2rem;\n    }\n    \n    .btn {\n        padding: 10px 25px;\n        font-size: 0.9rem;\n    }\n    \n    .display-4 {\n        font-size: 2.5rem;\n    }\n    \n    .display-5 {\n        font-size: 2rem;\n    }\n}\n\n@media (max-width: 576px) {\n    .hero-content h1 {\n        font-size: 2rem;\n    }\n    \n    .service-icon {\n        width: 60px;\n        height: 60px;\n    }\n    \n    .service-icon i {\n        font-size: 1.5rem;\n    }\n    \n    .contact-form {\n        padding: 1.5rem;\n    }\n}\n\n/* Loading Animation */\n.loading {\n    position: relative;\n    overflow: hidden;\n}\n\n.loading::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, \n        transparent, \n        rgba(255, 255, 255, 0.1), \n        transparent);\n    animation: loading 1.5s infinite;\n}\n\n@keyframes loading {\n    0% { left: -100%; }\n    100% { left: 100%; }\n}\n\n/* Utility Classes */\n.text-gradient {\n    background: var(--primary-gradient);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n.shadow-custom {\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n}\n\n.border-gradient {\n    border: 2px solid;\n    border-image: var(--primary-gradient) 1;\n}\n\n/* Project Builder Styles */\n.project-builder {\n    background: var(--bs-dark);\n    border-radius: 20px;\n    padding: 2rem;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n}\n\n.builder-step {\n    display: none;\n    opacity: 0;\n    transform: translateY(20px);\n    transition: all 0.5s ease;\n}\n\n.builder-step.active {\n    display: block;\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.step-header {\n    margin-bottom: 2rem;\n}\n\n.step-number {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    background: var(--primary-gradient);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin: 0 auto 1rem;\n    box-shadow: 0 4px 15px rgba(13, 110, 253, 0.3);\n}\n\n.options-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 1.5rem;\n    margin-bottom: 2rem;\n}\n\n.options-grid.multi-select {\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n}\n\n.option-card {\n    background: rgba(255, 255, 255, 0.03);\n    border: 2px solid rgba(255, 255, 255, 0.1);\n    border-radius: 15px;\n    padding: 2rem 1.5rem;\n    text-align: center;\n    transition: all 0.3s ease;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n}\n\n.option-card:hover {\n    border-color: var(--bs-primary);\n    background: rgba(255, 255, 255, 0.05);\n    transform: translateY(-5px);\n    box-shadow: 0 10px 25px rgba(13, 110, 253, 0.2);\n}\n\n.option-card.active {\n    border-color: var(--bs-primary);\n    background: rgba(13, 110, 253, 0.1);\n    box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.2);\n}\n\n.option-card i {\n    font-size: 2.5rem;\n    color: var(--bs-primary);\n    margin-bottom: 1rem;\n    display: block;\n}\n\n.option-card h5 {\n    color: var(--bs-light);\n    margin-bottom: 0.5rem;\n    font-weight: 600;\n}\n\n.option-card p {\n    color: var(--bs-light);\n    opacity: 0.8;\n    margin-bottom: 0;\n    font-size: 0.9rem;\n}\n\n.option-card.active::before {\n    content: '\\f00c';\n    font-family: 'Font Awesome 6 Free';\n    font-weight: 900;\n    position: absolute;\n    top: 10px;\n    left: 15px;\n    color: var(--bs-success);\n    font-size: 1.2rem;\n}\n\n.summary-card {\n    background: rgba(255, 255, 255, 0.03);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    border-radius: 15px;\n    padding: 2rem;\n}\n\n.summary-items {\n    max-height: 400px;\n    overflow-y: auto;\n}\n\n.summary-item {\n    display: flex;\n    align-items: center;\n    padding: 0.75rem 0;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n    color: var(--bs-light);\n}\n\n.summary-item:last-child {\n    border-bottom: none;\n}\n\n.summary-item i {\n    margin-right: 1rem;\n    width: 20px;\n}\n\n.builder-navigation {\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    padding-top: 1.5rem;\n    margin-top: 2rem;\n}\n\n/* Multi-select specific styles */\n.multi-select .option-card {\n    padding: 1.5rem 1rem;\n}\n\n.multi-select .option-card i {\n    font-size: 2rem;\n    margin-bottom: 0.5rem;\n}\n\n.multi-select .option-card h5 {\n    font-size: 1rem;\n    margin-bottom: 0;\n}\n\n/* Alert styling for final messages */\n.alert {\n    border-radius: 15px;\n    border: none;\n    padding: 2rem;\n    text-align: center;\n}\n\n.alert i {\n    display: block;\n    margin-bottom: 1rem;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n    .project-builder {\n        padding: 1.5rem;\n    }\n    \n    .options-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .option-card {\n        padding: 1.5rem 1rem;\n    }\n    \n    .option-card i {\n        font-size: 2rem;\n    }\n    \n    .step-number {\n        width: 50px;\n        height: 50px;\n        font-size: 1.25rem;\n    }\n}\n\n@media (max-width: 576px) {\n    .project-builder {\n        padding: 1rem;\n    }\n    \n    .option-card {\n        padding: 1rem;\n    }\n    \n    .summary-card {\n        padding: 1.5rem;\n    }\n    \n    .d-flex.gap-3 {\n        flex-direction: column;\n        gap: 1rem !important;\n    }\n    \n    .btn-lg {\n        width: 100%;\n    }\n}\n\n/* Simple blue info icon */\n.info-icon {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    width: 20px;\n    height: 20px;\n    background: #0d6efd;\n    color: white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n    font-weight: bold;\n    cursor: help;\n    z-index: 5;\n    transition: all 0.2s ease;\n}\n\n.info-icon:hover {\n    background: #0056b3;\n    transform: scale(1.1);\n    box-shadow: 0 4px 12px rgba(13, 110, 253, 0.3);\n}\n\n/* Beautiful Custom Tooltip Styles */\n.simple-tooltip {\n    position: fixed;\n    background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);\n    color: #ffffff;\n    padding: 12px 16px;\n    border-radius: 12px;\n    font-size: 0.875rem;\n    line-height: 1.5;\n    white-space: normal;\n    max-width: 300px;\n    min-height: auto;\n    width: max-content;\n    z-index: 99999;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.25), 0 4px 16px rgba(13, 110, 253, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(8px);\n    animation: tooltipFadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    text-align: left;\n    pointer-events: none;\n    display: block;\n    font-weight: 500;\n}\n\n.simple-tooltip::after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    border: 8px solid transparent;\n    border-top-color: #1a1a2e;\n    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n}\n\n@keyframes tooltipFadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(-10px) scale(0.95);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) scale(1);\n    }\n}\n\n/* Responsive tooltip positioning */\n@media (max-width: 768px) {\n    .option-card[data-tooltip]:hover::after {\n        max-width: 260px;\n        font-size: 0.8rem;\n        padding: 0.6rem 0.8rem;\n    }\n}\n","size_bytes":13820}},"version":1}